// 
// This file is automatically generated. Do not edit it.
//
// This code creates a given element instance given the element name.
//

if (elem_type == AbmButterbpf10::getNetlistName())
  new_elem = new AbmButterbpf10(iname);
if (elem_type == AbmMixer::getNetlistName())
  new_elem = new AbmMixer(iname);
if (elem_type == AbmVCann::getNetlistName())
  new_elem = new AbmVCann(iname);
if (elem_type == AbmVTanh::getNetlistName())
  new_elem = new AbmVTanh(iname);
if (elem_type == Attenuator::getNetlistName())
  new_elem = new Attenuator(iname);
if (elem_type == Bjtnpn::getNetlistName())
  new_elem = new Bjtnpn(iname);
if (elem_type == BjtnpnT::getNetlistName())
  new_elem = new BjtnpnT(iname);
if (elem_type == Bjtpnp::getNetlistName())
  new_elem = new Bjtpnp(iname);
if (elem_type == ButterworthBPF::getNetlistName())
  new_elem = new ButterworthBPF(iname);
if (elem_type == C::getNetlistName())
  new_elem = new C(iname);
if (elem_type == Capacitor::getNetlistName())
  new_elem = new Capacitor(iname);
if (elem_type == CapacitorFerroelectric::getNetlistName())
  new_elem = new CapacitorFerroelectric(iname);
if (elem_type == CapacitorLC::getNetlistName())
  new_elem = new CapacitorLC(iname);
if (elem_type == CapacitorJn::getNetlistName())
  new_elem = new CapacitorJn(iname);
if (elem_type == CapacitorMos::getNetlistName())
  new_elem = new CapacitorMos(iname);
if (elem_type == Cccs::getNetlistName())
  new_elem = new Cccs(iname);
if (elem_type == Ccvs::getNetlistName())
  new_elem = new Ccvs(iname);
if (elem_type == Circulator::getNetlistName())
  new_elem = new Circulator(iname);
if (elem_type == ChebyshevBPF::getNetlistName())
  new_elem = new ChebyshevBPF(iname);
if (elem_type == ChebyshevBSF::getNetlistName())
  new_elem = new ChebyshevBSF(iname);
if (elem_type == ChebyshevHPF::getNetlistName())
  new_elem = new ChebyshevHPF(iname);
if (elem_type == ChebyshevLPF::getNetlistName())
  new_elem = new ChebyshevLPF(iname);
if (elem_type == CmosInv::getNetlistName())
  new_elem = new CmosInv(iname);
if (elem_type == CmosInvT::getNetlistName())
  new_elem = new CmosInvT(iname);
if (elem_type == CmosNand::getNetlistName())
  new_elem = new CmosNand(iname);
if (elem_type == CmosNandT::getNetlistName())
  new_elem = new CmosNandT(iname);
if (elem_type == CmosNor::getNetlistName())
  new_elem = new CmosNor(iname);
if (elem_type == CmosNorT::getNetlistName())
  new_elem = new CmosNorT(iname);
if (elem_type == Cmos2Nand::getNetlistName())
  new_elem = new Cmos2Nand(iname);
if (elem_type == Cmos2NandT::getNetlistName())
  new_elem = new Cmos2NandT(iname);
if (elem_type == Cmos2NandX::getNetlistName())
  new_elem = new Cmos2NandX(iname);
if (elem_type == Cmos2Nor::getNetlistName())
  new_elem = new Cmos2Nor(iname);
if (elem_type == CmosLatchSRnand::getNetlistName())
  new_elem = new CmosLatchSRnand(iname);
if (elem_type == CmosLatchSRnandX::getNetlistName())
  new_elem = new CmosLatchSRnandX(iname);
if (elem_type == CPW::getNetlistName())
  new_elem = new CPW(iname);
if (elem_type == D::getNetlistName())
  new_elem = new D(iname);
if (elem_type == Delay::getNetlistName())
  new_elem = new Delay(iname);
if (elem_type == DFlipFlop::getNetlistName())
  new_elem = new DFlipFlop(iname);
if (elem_type == DFlipFlopX::getNetlistName())
  new_elem = new DFlipFlopX(iname);
if (elem_type == DHLD::getNetlistName())
  new_elem = new DHLD(iname);
if (elem_type == Diode::getNetlistName())
  new_elem = new Diode(iname);
if (elem_type == DiodeCompact::getNetlistName())
  new_elem = new DiodeCompact(iname);
if (elem_type == DiodeQk::getNetlistName())
  new_elem = new DiodeQk(iname);
if (elem_type == DiodeSP::getNetlistName())
  new_elem = new DiodeSP(iname);
if (elem_type == DiodeTun::getNetlistName())
  new_elem = new DiodeTun(iname);
if (elem_type == FosterNPort::getNetlistName())
  new_elem = new FosterNPort(iname);
if (elem_type == GridEx::getNetlistName())
  new_elem = new GridEx(iname);
if (elem_type == Gyrator::getNetlistName())
  new_elem = new Gyrator(iname);
if (elem_type == HBTnpnxT::getNetlistName())
  new_elem = new HBTnpnxT(iname);
if (elem_type == IAM::getNetlistName())
  new_elem = new IAM(iname);
if (elem_type == Iexp::getNetlistName())
  new_elem = new Iexp(iname);
if (elem_type == Inductor::getNetlistName())
  new_elem = new Inductor(iname);
if (elem_type == InterconnectRT::getNetlistName())
  new_elem = new InterconnectRT(iname);
if (elem_type == InterconnectRTSH::getNetlistName())
  new_elem = new InterconnectRTSH(iname);
if (elem_type == IsfFM::getNetlistName())
  new_elem = new IsfFM(iname);
if (elem_type == Isolator::getNetlistName())
  new_elem = new Isolator(iname);
if (elem_type == Isource::getNetlistName())
  new_elem = new Isource(iname);
if (elem_type == Jfetn::getNetlistName())
  new_elem = new Jfetn(iname);
if (elem_type == Jfetp::getNetlistName())
  new_elem = new Jfetp(iname);
if (elem_type == K::getNetlistName())
  new_elem = new K(iname);
if (elem_type == L::getNetlistName())
  new_elem = new L(iname);
if (elem_type == Lspiral::getNetlistName())
  new_elem = new Lspiral(iname);
if (elem_type == MesfetC::getNetlistName())
  new_elem = new MesfetC(iname);
if (elem_type == MesfetCQ::getNetlistName())
  new_elem = new MesfetCQ(iname);
if (elem_type == MesfetCT::getNetlistName())
  new_elem = new MesfetCT(iname);
if (elem_type == MesfetM::getNetlistName())
  new_elem = new MesfetM(iname);
if (elem_type == MesfetMQ::getNetlistName())
  new_elem = new MesfetMQ(iname);
if (elem_type == MesfetTom::getNetlistName())
  new_elem = new MesfetTom(iname);
if (elem_type == Mosnekv::getNetlistName())
  new_elem = new Mosnekv(iname);
if (elem_type == Mosnekv2::getNetlistName())
  new_elem = new Mosnekv2(iname);
if (elem_type == Mosn1::getNetlistName())
  new_elem = new Mosn1(iname);
if (elem_type == Mosn2::getNetlistName())
  new_elem = new Mosn2(iname);
if (elem_type == Mosn9::getNetlistName())
  new_elem = new Mosn9(iname);
if (elem_type == Mosnbsim3::getNetlistName())
  new_elem = new Mosnbsim3(iname);
if (elem_type == Mosnbsim3SOI5T1::getNetlistName())
  new_elem = new Mosnbsim3SOI5T1(iname);
if (elem_type == Mosnbsim4::getNetlistName())
  new_elem = new Mosnbsim4(iname);
if (elem_type == MosnldMet::getNetlistName())
  new_elem = new MosnldMet(iname);
if (elem_type == Mosntft::getNetlistName())
  new_elem = new Mosntft(iname);
if (elem_type == Mosntftq::getNetlistName())
  new_elem = new Mosntftq(iname);
if (elem_type == Mospekv::getNetlistName())
  new_elem = new Mospekv(iname);
if (elem_type == Mospekv2::getNetlistName())
  new_elem = new Mospekv2(iname);
if (elem_type == Mosp1::getNetlistName())
  new_elem = new Mosp1(iname);
if (elem_type == Mosp2::getNetlistName())
  new_elem = new Mosp2(iname);
if (elem_type == Mosp9::getNetlistName())
  new_elem = new Mosp9(iname);
if (elem_type == Mospbsim3::getNetlistName())
  new_elem = new Mospbsim3(iname);
if (elem_type == Mospbsim3SOI5T1::getNetlistName())
  new_elem = new Mospbsim3SOI5T1(iname);
if (elem_type == Mosnbsim3SOI5T1T::getNetlistName())
  new_elem = new Mosnbsim3SOI5T1T(iname);
if (elem_type == Molecule1::getNetlistName())
  new_elem = new Molecule1(iname);
if (elem_type == Molecule2::getNetlistName())
  new_elem = new Molecule2(iname);
if (elem_type == NPort::getNetlistName())
  new_elem = new NPort(iname);
if (elem_type == NPortT::getNetlistName())
  new_elem = new NPortT(iname);
if (elem_type == OpAmpT::getNetlistName())
  new_elem = new OpAmpT(iname);
if (elem_type == Open::getNetlistName())
  new_elem = new Open(iname);
if (elem_type == R::getNetlistName())
  new_elem = new R(iname);
if (elem_type == Resistor::getNetlistName())
  new_elem = new Resistor(iname);
if (elem_type == ResistorPhyN::getNetlistName())
  new_elem = new ResistorPhyN(iname);
if (elem_type == ResistorPhyP::getNetlistName())
  new_elem = new ResistorPhyP(iname);
if (elem_type == ResistorPhyPoly::getNetlistName())
  new_elem = new ResistorPhyPoly(iname);
if (elem_type == ResistorT::getNetlistName())
  new_elem = new ResistorT(iname);
if (elem_type == StrainGauge::getNetlistName())
  new_elem = new StrainGauge(iname);
if (elem_type == ThermalBlock::getNetlistName())
  new_elem = new ThermalBlock(iname);
if (elem_type == ThermalBlockBC1::getNetlistName())
  new_elem = new ThermalBlockBC1(iname);
if (elem_type == ThermalBlockRC::getNetlistName())
  new_elem = new ThermalBlockRC(iname);
if (elem_type == ThermalHeatsink::getNetlistName())
  new_elem = new ThermalHeatsink(iname);
if (elem_type == ThermalHeatsink1::getNetlistName())
  new_elem = new ThermalHeatsink1(iname);
if (elem_type == ThermalHeatsinkSpot::getNetlistName())
  new_elem = new ThermalHeatsinkSpot(iname);
if (elem_type == ThermalHeatsinkMMIC1::getNetlistName())
  new_elem = new ThermalHeatsinkMMIC1(iname);
if (elem_type == ThermalInt::getNetlistName())
  new_elem = new ThermalInt(iname);
if (elem_type == ThermalNportNL::getNetlistName())
  new_elem = new ThermalNportNL(iname);
if (elem_type == ThermalShunt::getNetlistName())
  new_elem = new ThermalShunt(iname);
if (elem_type == ThermalTest::getNetlistName())
  new_elem = new ThermalTest(iname);
if (elem_type == ThermalTransf::getNetlistName())
  new_elem = new ThermalTransf(iname);
if (elem_type == Tlinp4::getNetlistName())
  new_elem = new Tlinp4(iname);
if (elem_type == Transformer::getNetlistName())
  new_elem = new Transformer(iname);
if (elem_type == TransformerCT::getNetlistName())
  new_elem = new TransformerCT(iname);
if (elem_type == VAM::getNetlistName())
  new_elem = new VAM(iname);
if (elem_type == Vccs::getNetlistName())
  new_elem = new Vccs(iname);
if (elem_type == VccsPoly::getNetlistName())
  new_elem = new VccsPoly(iname);
if (elem_type == VCSEL::getNetlistName())
  new_elem = new VCSEL(iname);
if (elem_type == Vct::getNetlistName())
  new_elem = new Vct(iname);
if (elem_type == Vcvs::getNetlistName())
  new_elem = new Vcvs(iname);
if (elem_type == Vexp::getNetlistName())
  new_elem = new Vexp(iname);
if (elem_type == ViaRT::getNetlistName())
  new_elem = new ViaRT(iname);
if (elem_type == Vlfmpulse::getNetlistName())
  new_elem = new Vlfmpulse(iname);
if (elem_type == Vpulse::getNetlistName())
  new_elem = new Vpulse(iname);
if (elem_type == Vpulsexp::getNetlistName())
  new_elem = new Vpulsexp(iname);
if (elem_type == VsfFM::getNetlistName())
  new_elem = new VsfFM(iname);
if (elem_type == Vsource::getNetlistName())
  new_elem = new Vsource(iname);
if (elem_type == Vtwotone::getNetlistName())
  new_elem = new Vtwotone(iname);
if (elem_type == X::getNetlistName())
  new_elem = new X(iname);
if (elem_type == XOR::getNetlistName())
  new_elem = new XOR(iname);
if (elem_type == Xsubckt::getNetlistName())
  new_elem = new Xsubckt(iname);
if (elem_type == Ymatrix::getNetlistName())
  new_elem = new Ymatrix(iname);
if (elem_type == Zbutter::getNetlistName())
  new_elem = new Zbutter(iname);
if (elem_type == Zchebyi::getNetlistName())
  new_elem = new Zchebyi(iname);

